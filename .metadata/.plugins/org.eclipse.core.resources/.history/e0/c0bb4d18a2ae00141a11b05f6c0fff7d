#include "ets_sys.h"
#include "osapi.h"
#include "gpio.h"
#include "os_type.h"
#include "user_config.h"
#include "user_interface.h"
#include "driver/uart.h"

os_event_t    user_procTaskQueue[user_procTaskQueueLen];
static volatile os_timer_t channelHop_timer;

static void loop(os_event_t *events);

int duty = 500;
int dir = 1;

//Main code function
static void ICACHE_FLASH_ATTR
loop(os_event_t *events)
{
	duty = duty + dir;

	pwm_set_duty(duty, 0);
	pwm_set_duty(duty, 1);
	pwm_set_duty(duty, 2);
	pwm_start();
	if (duty > 490) {
		dir = dir * -1;
	}
	if (duty < 2) {
		dir = dir * -1;
	}
	os_delay_us(100);
    os_delay_us(10000);
    ets_uart_printf("Duty: %d",duty);
}

//Init function 
void ICACHE_FLASH_ATTR
user_init()
{
	uart_init(BIT_RATE_115200,BIT_RATE_115200);
	PIN_FUNC_SELECT(PERIPHS_IO_MUX_GPIO2_U, FUNC_GPIO2);
	GPIO_OUTPUT_SET(2, 1);
	os_delay_us(10000);
	GPIO_OUTPUT_SET(2, 0);
	os_delay_us(10000);

	pwm_init(500, duty);

    //Start os task
    system_os_task(loop, user_procTaskPrio,user_procTaskQueue, user_procTaskQueueLen);
    ets_uart_printf("user_init complete");
}
